package pt.tecnico.Client;

/* these imported classes are generated by the hello-world-server contract */
import pt.tecnico.grpc.ClientServer;
import pt.tecnico.grpc.ClientToServerServiceGrpc;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Random;
import java.util.Scanner;

import com.google.protobuf.ByteString;

import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;

import pt.ulisboa.tecnico.sdis.zk.ZKNaming;
import pt.ulisboa.tecnico.sdis.zk.ZKNamingException;
import pt.ulisboa.tecnico.sdis.zk.ZKRecord;

public class ClientMain {

	public static void main(String[] args) throws Exception {
		System.out.println(pt.tecnico.Client.ClientMain.class.getSimpleName());

		// receive and print arguments
		System.out.printf("Received %d arguments%n", args.length);
		for (int i = 0; i < args.length; i++) {
			System.out.printf("arg[%d] = %s%n", i, args[i]);
		}

		// check arguments
		if (args.length < 3) {
			System.err.println("Argument(s) missing!");
			System.err.printf("Usage: java %s path zooHost zooPort%n", pt.tecnico.Client.ClientMain.class.getName());
			return;
		}

		final String zooHost = args[0];
		final String zooPort = args[1];
		final String path = args[2];

		ClientCommandImpl commands = new ClientCommandImpl();

		final String target = commands.connectToServer(zooHost, zooPort, path);

		Scanner inputScanner = new Scanner(System.in);
		try {
			do{
				System.out.print("> ");
			}while (commands.ExecuteCommand(inputScanner.nextLine()));			
		} catch (Exception e) {
			System.out.println("Failed to execute commands, will shutdown");
		}

		inputScanner.close();

		commands.ShutdownChannel();
	}

}
