<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ProtectedRemoteFilesProtect</artifactId>
        <groupId>pt.tecnico</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>CAServer</artifactId>

    <properties>
        <maven.compiler.source>${version.java}</maven.compiler.source>
        <maven.compiler.target>${version.java}</maven.compiler.target>

        <mainclass>pt.tecnico.CAServer.CAServerMain</mainclass>
        <zoo.host>localhost</zoo.host>
        <zoo.port>2181</zoo.port>
        <server.path>/grpc/CAServer</server.path>
        <server.host>localhost</server.host>
        <server.port>7000</server.port>
        <server.password>caPass</server.password>
    </properties>

    <dependencies>
        <dependency>
            <groupId>pt.tecnico</groupId>
            <artifactId>GRPC</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- Cryptography related functions -->
        <dependency>
            <groupId>pt.tecnico</groupId>
            <artifactId>Common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- ZK Naming -->
        <dependency>
            <groupId>pt.ulisboa.tecnico.sdis</groupId>
            <artifactId>zk-naming</artifactId>
            <version>1.0.4</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>


    <build>
        <!-- Plug-ins allow for the reuse of common build logic across multiple projects.
        They do this by executing an "action" in the context of a project's description. -->
        <plugins>
            <!-- Plug-in used to compile the sources of your project. Java 9 requires
                at least version 3.7.0 to properly handle modules. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven-compiler-plugin}</version>
                <configuration>
                    <source>${version.java}</source>
                    <target>${version.java}</target>
                </configuration>
            </plugin>
            <!-- Plugin that provides two goals to execute system and Java programs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${version.exec-maven-plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${mainclass}</mainClass>
                    <arguments>
                        <argument>${zoo.host}</argument>
                        <argument>${zoo.port}</argument>
                        <argument>${server.path}</argument>
                        <argument>${server.host}</argument>
                        <argument>${server.port}</argument>
                        <argument>${server.password}</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>